/************************************************************************
 *
 * defADAR7251.h
 *
 * (c) Copyright 2015 Analog Devices, Inc.  All rights reserved.
 *
 ************************************************************************/
#ifndef __DEF_ADAR7251_H__
#define __DEF_ADAR7251_H__

/* SPI buffer size.  We write and read 5 8-bit words, so NUM_SPI_BYTES=5 */
#define NUM_SPI_BYTES 5u
//#define NUM_REGS_W  75u
#define NUM_REGS_W  69u
#define NUM_REGS_R  87u

#define AFE_CLK_50

uint8_t read_reg[NUM_SPI_BYTES] = {0};
uint8_t write_buffer_crc_disable[7] = {0x00,  0XFD, 0x00, 0x00,0x01, 0x33, 0x07};
uint8_t write_buffer_output[5] = {0x00,  0X01, 0xC2, 0x00,0x01};

#ifdef AFE_CLK_50
// 1 MHz fs, CORECLK 96MHz @ 50MHz CLKIN
uint8_t write_buffer_pll[4][5] = {{0x00,  0X00, 0x00, 0x00,0x02},
								  {0x00,  0X00, 0x03, 0x28,0x33},
								  {0x00,  0X00, 0x01, 0x00,0x64},
								  {0x00,  0X00, 0x02, 0x00,0x4C}};
#else
//1 MHz fs, CORECLK 96MHz @ 19.2MHz CLKIN
uint8_t write_buffer_pll[4][5] = {{0x00,  0X00, 0x00, 0x00,0x02},
								  {0x00,  0X00, 0x03, 0x28,0x01},
								  {0x00,  0X00, 0x01, 0x00,0x00},
								  {0x00,  0X00, 0x02, 0x00,0x00}};
#endif

// 1.2 MHz fs, CORECLK 115.2 MHz @ 50MHz CLKIN
/*
uint8_t write_buffer_pll[4][5] = {{0x00,  0X00, 0x00, 0x00,0x02},
								  {0x00,  0X00, 0x03, 0x10,0x03},
								  {0x00,  0X00, 0x01, 0x03,0xE8},
								  {0x00,  0X00, 0x02, 0x01,0x30}};
*/

// 1.2 MHz fs, CORECLK 38.4 MHz @ 50MHz CLKIN

/*
uint8_t write_buffer_pll[4][5] = {{0x00,  0X00, 0x00, 0x00,0x02},
								  {0x00,  0X00, 0x03, 0x18,0x01},
								  {0x00,  0X00, 0x01, 0x00,0x00},
								  {0x00,  0X00, 0x02, 0x01,0x30}};
*/

// 1 MHz fs, CORECLK 96MHz @ 50MHz CLKIN
/*
uint8_t write_buffer_pll[4][5] = {{0x00,  0X00, 0x00, 0x00,0x02},
								  {0x00,  0X00, 0x03, 0x08,0x03},
								  {0x00,  0X00, 0x01, 0x00,0x64},
								  {0x00,  0X00, 0x02, 0x00,0x5C}};
*/

// 1 MHz fs, CORECLK 96MHz @ 19.2MHz CLKIN  in fractional mode
/*
uint8_t write_buffer_pll[4][5] = {{0x00,  0X00, 0x00, 0x00,0x02},
								  {0x00,  0X00, 0x03, 0x30,0x03},
								  {0x00,  0X00, 0x01, 0x00,0x64},
								  {0x00,  0X00, 0x02, 0x00,0x32}};
*/

// 1.2 MHz fs, CORECLK 115.2MHz @ 19.2MHz CLKIN
/*
uint8_t write_buffer_pll[4][5] = {{0x00,  0X00, 0x00, 0x00,0x02},
								  {0x00,  0X00, 0x03, 0x30,0x01},
								  {0x00,  0X00, 0x01, 0x00,0x00},
								  {0x00,  0X00, 0x02, 0x00,0x00}};
*/

// 1 MHz fs, CORECLK 96MHz @ 48MHz CLKIN
/*
uint8_t write_buffer_pll[4][5] = {{0x00,  0X00, 0x00, 0x00,0x02},
								  {0x00,  0X00, 0x03, 0x10,0x01},
								  {0x00,  0X00, 0x01, 0x00,0x00},
								  {0x00,  0X00, 0x02, 0x00,0x00}};
*/


// Reading PLL lock
uint8_t read_buffer_input[2][5] = {{0x01,  0X00, 0x05, 0x00,0x00},
								   {0x01,  0X03, 0x01, 0x00,0x00}};

uint8_t write_buffer_ppctl[5] = {0x00,  0X01, 0xC1, 0x00,0x06};
uint8_t write_buffer_srlctl[5]= {0x00,  0X01, 0xC0, 0x00,0x40};

// SPI Command data structure // [REGNO]{R/W_CMD, 16 BIT REG ADDR, , 16 BIT DATA}
uint8_t write_buffer[NUM_REGS_W][NUM_SPI_BYTES] = {
/*		{0x00,  0x00, 0x00, 0x00,0x02},*/
/*
		{0x00,  0x00, 0x01, 0x00,0x00},
		{0x00,  0x00, 0x02, 0x00,0x00},
*/
/*		{0x00,  0x00, 0x03, 0x30,0x01},*/
//R		{0x00,  0x00, 0x05, 0x00,0x01},
		{0x00,  0x00, 0x06, 0x00,0x00}, // PLL_BIAS ( Not in datasheet)
		{0x00,  0x00, 0x40, 0x00,0x01},
		{0x00,  0x00, 0x41, 0x00,0xFF},
//b		{0x00,  0x00, 0x42, 0x03,0xEF},  // old value
		{0x00,  0x00, 0x42, 0x03,0xCF},  // turns off aux ADC, multi-purpose IO pin
		{0x00,  0x00, 0x80, 0x00,0x00},
		{0x00,  0x00, 0x81, 0x00,0x00},
//R		{0x00,  0x00, 0x82, 0x00,0x00},
//R		{0x00,  0x00, 0x83, 0x00,0x00},
//R		{0x00,  0x00, 0x84, 0x00,0x00},
//R		{0x00,  0x00, 0x85, 0x00,0x00},
		{0x00,  0x00, 0x86, 0x00,0x00},
//R		{0x00,  0x00, 0x87, 0x00,0x00},
//R		{0x00,  0x00, 0x88, 0x00,0x00},
//R		{0x00,  0x00, 0x89, 0x00,0x00},
//		{0x00,  0x01, 0x00, 0x00,0x00}, // LNA Gain default 2
//		{0x00,  0x01, 0x00, 0x00,0x55}, // LNA Gain 4=12dB 00=6dB, 01=12dB, 10=18dB, 11=24dB
		{0x00,  0x01, 0x00, 0x00,0xFF}, // LNA Gain=24dB 00=6dB, 01=12dB, 10=18dB, 11=24dB  11111111B 16x
//		{0x00,  0x01, 0x01, 0x00,0x00}, // PGA Gain 2.9dB    00=2.9dB, 01=8.9, 10=14.96, 11=20.99dB
		{0x00,  0x01, 0x01, 0x00,0x55}, // PGA Gain 8.9dB    00=2.9dB, 01=8.9, 10=14.96, 11=20.99dB 01010101B=0x55 2.8x

		{0x00,  0x01, 0x02, 0x22,0x22}, // LNA + PGA EQ bypass
//		{0x00,  0x01, 0x02, 0x11,0x11}, // LNA + PGA + EQ path
//		{0x00,  0x01, 0x02, 0x44,0x22}, // Ch3 CH4 swap
		{0x00,  0x01, 0x03, 0x00,0x00}, // FS_SEL ( Not in Datasheet)
		{0x00,  0x01, 0x40, 0x00,0x03},
//		{0x00,  0x01, 0x41, 0x00,0x18}, // Dig HPF 46.6Hz, Phase EQ off, DHPF off
		{0x00,  0x01, 0x41, 0x00,0x19}, // Dig HPF 46.6Hz, Phase EQ off, DHPF on
		{0x00,  0x01, 0x42, 0x10,0xC0}, // GAIN_ADJUST ( Not in Datasheet)
		{0x00,  0x01, 0x43, 0x00,0x00},
		{0x00,  0x01, 0x44, 0x00,0x02},
		{0x00,  0x01, 0x45, 0x00,0xC8}, // Filter_coefficent ( Not in datasheet) Default setting SDP is 0xC8)
		{0x00,  0x01, 0xC0, 0x00,0x40},
		{0x00,  0x01, 0xC1, 0x00,0x00}, // High bytes first
/*		{0x00,  0x01, 0xC2, 0x00,0x01},*/ // Programmed During PLL Init Sequence
//R		{0x00,  0x02, 0x00, 0x00,0x00},
//R		{0x00,  0x02, 0x01, 0x00,0x00},
		{0x00,  0x02, 0x10, 0x00,0x00},
		{0x00,  0x02, 0x11, 0x00,0x00},
		{0x00,  0x02, 0x50, 0x00,0x00},
		{0x00,  0x02, 0x51, 0x00,0x00},
		{0x00,  0x02, 0x60, 0x00,0x00},
		{0x00,  0x02, 0x61, 0x00,0x00},
		{0x00,  0x02, 0x70, 0x00,0x00},
		{0x00,  0x02, 0x71, 0x00,0x00},
		{0x00,  0x02, 0x80, 0x00,0x00},
		{0x00,  0x02, 0x81, 0x00,0x00},
		{0x00,  0x02, 0x82, 0x00,0x04},
		{0x00,  0x02, 0x83, 0x00,0x00},
		{0x00,  0x02, 0x84, 0x00,0x04},
		{0x00,  0x02, 0x85, 0x00,0x04},
		{0x00,  0x02, 0x86, 0x00,0x03},
		{0x00,  0x02, 0x87, 0x00,0x03},
		{0x00,  0x02, 0x88, 0x00,0x03},
		{0x00,  0x02, 0x89, 0x00,0x03},
		{0x00,  0x02, 0x8A, 0x00,0x03},
		{0x00,  0x02, 0x8B, 0x00,0x03},
		{0x00,  0x02, 0x8C, 0x00,0x03},
		{0x00,  0x02, 0x8D, 0x00,0x03},
		{0x00,  0x02, 0x8E, 0x00,0x03},
		{0x00,  0x02, 0x91, 0x00,0x03},
		{0x00,  0x02, 0x92, 0x00,0x00},
		{0x00,  0x03, 0x00, 0x00,0x00}, // ADC_MODTEST ( Not in Datasheet)
		{0x00,  0x03, 0x01, 0x03,0x06}, // EQ HPF 32 KHZ with performance disable
		{0x00,  0x03, 0x02, 0x00,0x00},
		{0x00,  0x03, 0x03, 0x00,0x00},
		{0x00,  0x03, 0x05, 0x00,0x01},
//R		{0x00,  0x03, 0x06, 0x00,0x00},
		{0x00,  0x03, 0x07, 0x00,0x00},
		{0x00,  0x03, 0x08, 0x00,0x13},
//R		{0x00,  0x03, 0x09, 0x00,0x00},
		{0x00,  0x03, 0x0A, 0x00,0x01}, //Performance setting  Enable
		{0x00,  0x03, 0x0C, 0x00,0x00}, // PLL_TEST ( Not in Datasheet)
		{0x00,  0x03, 0x0D, 0x00,0x00}, // ANALOG_INPUT_OVERRIDE( Not in Datasheet)
		{0x00,  0x03, 0x0E, 0x00,0x00}, // Different from Reset Value
		{0x00,  0x03, 0x0F, 0x00,0x00}, // PDETECT_DEL ( Not in Datasheet)
		{0x00,  0x03, 0x10, 0x00,0x00}, // DIGOUT_TEST EN ( Not in Datasheet)
		{0x00,  0x03, 0x11, 0x00,0xAA}, // DIGOUT_REG0_L  ( Not in Datasheet)
		{0x00,  0x03, 0x12, 0x00,0xAA}, // DIGOUT_REG0_H  ( Not in Datasheet)
		{0x00,  0x03, 0x13, 0x00,0x55}, // DIGOUT_REG1_L  ( Not in Datasheet)
		{0x00,  0x03, 0x14, 0x00,0x55}, // DIGOUT_REG1_H ( Not in Datasheet)
		{0x00,  0x03, 0x15, 0x00,0x99}, // DIGOUT_REG2_L ( Not in Datasheet)
		{0x00,  0x03, 0x16, 0x00,0x99}, // DIGOUT_REG2_H ( Not in Datasheet)
		{0x00,  0x03, 0x17, 0x00,0x66}, // DIGOUT_REG3_L ( Not in Datasheet)
		{0x00,  0x03, 0x18, 0x00,0x66}, // DIGOUT_REG3_H ( Not in Datasheet)
		{0x00,  0x03, 0x20, 0x00,0xAA}, // DITHER_VALUE_L( Not in Datasheet)
		{0x00,  0x03, 0x21, 0x00,0xAA}, // DITHER_VALUE_H( Not in Datasheet)
		{0x00,  0x03, 0x22, 0x00,0x00}, // SHUF_TEST 	 ( Not in Datasheet)
		{0x00,  0x03, 0x23, 0x00,0x00}};// MCG_SYNC 	 ( Not in Datasheet)

// Read array
uint8_t  read_reg_all[NUM_REGS_R][NUM_SPI_BYTES] ;

uint8_t read_buffer[NUM_REGS_R][NUM_SPI_BYTES] = {
		{0x01,  0x00, 0x00, 0x00,0x00},
		{0x01,  0x00, 0x01, 0x00,0x00},
		{0x01,  0x00, 0x02, 0x00,0x00},
		{0x01,  0x00, 0x03, 0x00,0x00},
		{0x01,  0x00, 0x05, 0x00,0x00},
		{0x01,  0x00, 0x06, 0x00,0x00},
		{0x01,  0x00, 0x40, 0x00,0x00},
		{0x01,  0x00, 0x41, 0x00,0x00},
		{0x01,  0x00, 0x42, 0x00,0x00},
		{0x01,  0x00, 0x80, 0x00,0x00},
		{0x01,  0x00, 0x81, 0x00,0x00},
		{0x01,  0x00, 0x82, 0x00,0x00},
		{0x01,  0x00, 0x83, 0x00,0x00},
		{0x01,  0x00, 0x84, 0x00,0x00},
		{0x01,  0x00, 0x85, 0x00,0x00},
		{0x01,  0x00, 0x86, 0x00,0x00},
		{0x01,  0x00, 0x87, 0x00,0x00},
		{0x01,  0x00, 0x88, 0x00,0x00},
		{0x01,  0x00, 0x89, 0x00,0x00},
		{0x01,  0x01, 0x00, 0x00,0x00},
		{0x01,  0x01, 0x01, 0x00,0x00},
		{0x01,  0x01, 0x02, 0x00,0x00},
		{0x01,  0x01, 0x03, 0x00,0x00},
		{0x01,  0x01, 0x40, 0x00,0x00},
		{0x01,  0x01, 0x41, 0x00,0x00},
		{0x01,  0x01, 0x42, 0x00,0x00},
		{0x01,  0x01, 0x43, 0x00,0x00},
		{0x01,  0x01, 0x44, 0x00,0x00},
		{0x01,  0x01, 0x45, 0x00,0x00},
		{0x01,  0x01, 0xC0, 0x00,0x00},
		{0x01,  0x01, 0xC1, 0x00,0x00},
		{0x01,  0x01, 0xC2, 0x00,0x00},
		{0x01,  0x02, 0x00, 0x00,0x00},
		{0x01,  0x02, 0x01, 0x00,0x00},
		{0x01,  0x02, 0x10, 0x00,0x00},
		{0x01,  0x02, 0x11, 0x00,0x00},
		{0x01,  0x02, 0x50, 0x00,0x00},
		{0x01,  0x02, 0x51, 0x00,0x00},
		{0x01,  0x02, 0x60, 0x00,0x00},
		{0x01,  0x02, 0x61, 0x00,0x00},
		{0x01,  0x02, 0x70, 0x00,0x00},
		{0x01,  0x02, 0x71, 0x00,0x00},
		{0x01,  0x02, 0x80, 0x00,0x00},
		{0x01,  0x02, 0x81, 0x00,0x00},
		{0x01,  0x02, 0x82, 0x00,0x00},
		{0x01,  0x02, 0x83, 0x00,0x00},
		{0x01,  0x02, 0x84, 0x00,0x00},
		{0x01,  0x02, 0x85, 0x00,0x00},
		{0x01,  0x02, 0x86, 0x00,0x00},
		{0x01,  0x02, 0x87, 0x00,0x00},
		{0x01,  0x02, 0x88, 0x00,0x00},
		{0x01,  0x02, 0x89, 0x00,0x00},
		{0x01,  0x02, 0x8A, 0x00,0x00},
		{0x01,  0x02, 0x8B, 0x00,0x00},
		{0x01,  0x02, 0x8C, 0x00,0x00},
		{0x01,  0x02, 0x8D, 0x00,0x00},
		{0x01,  0x02, 0x8E, 0x00,0x00},
		{0x01,  0x02, 0x91, 0x00,0x00},
		{0x01,  0x02, 0x92, 0x00,0x00},
		{0x01,  0x03, 0x00, 0x00,0x00},
		{0x01,  0x03, 0x01, 0x00,0x00},
		{0x01,  0x03, 0x02, 0x00,0x00},
		{0x01,  0x03, 0x03, 0x00,0x00},
		{0x01,  0x03, 0x05, 0x00,0x00},
		{0x01,  0x03, 0x06, 0x00,0x00},
		{0x01,  0x03, 0x07, 0x00,0x00},
		{0x01,  0x03, 0x08, 0x00,0x00},
		{0x01,  0x03, 0x09, 0x00,0x00},
		{0x01,  0x03, 0x0A, 0x00,0x00},
		{0x01,  0x03, 0x0C, 0x00,0x00},
		{0x01,  0x03, 0x0D, 0x00,0x00},
		{0x01,  0x03, 0x0E, 0x00,0x00},
		{0x01,  0x03, 0x0F, 0x00,0x00},
		{0x01,  0x03, 0x10, 0x00,0x00},
		{0x01,  0x03, 0x11, 0x00,0x00},
		{0x01,  0x03, 0x12, 0x00,0x00},
		{0x01,  0x03, 0x13, 0x00,0x00},
		{0x01,  0x03, 0x14, 0x00,0x00},
		{0x01,  0x03, 0x15, 0x00,0x00},
		{0x01,  0x03, 0x16, 0x00,0x00},
		{0x01,  0x03, 0x17, 0x00,0x00},
		{0x01,  0x03, 0x18, 0x00,0x00},
		{0x01,  0x03, 0x20, 0x00,0x00},
		{0x01,  0x03, 0x21, 0x00,0x00},
		{0x01,  0x03, 0x22, 0x00,0x00},
		{0x01,  0x03, 0x23, 0x00,0x00},
		{0x01,  0XFD, 0x00, 0x00,0x00} };

#endif // __DEF_ADAR7251_H__
